###################################################################################################
##  Reporttemplate zur Erstellung einer Abhängigkeitsmatrix                                      ##
##                                                                                               ##
##  Autor: Karsten Wolfert (Ingenieurbüro Wolfert)                                               ##
##  2012-08-28  KW  Initiale Erstellung                                                          ##
##                                                                                               ##
##                                                                                               ##
##  Abhängigkeitsmatrix.rpttpl                                                                   ##
##                                                                                               ##
###################################################################################################

## Global Variables
#set ( $Project=$projectDataProvider.getProject()) ## Project Object
#set ( $projectName = $Project.getDisplayName() ) ## Arcway Cockpit Project Name
##set ( $sortedListOfRequirements = $requirementDataProvider.getAllRequirement($requirementDataProvider.getSORT_REQUIREMENT_BY_ID()) )
#set ( $sortedListOfRequirements = $requirementDataProvider.getAllRequirements() )
#set ( $numberOfRequirements = ${arrayHelper.getArraySize( $sortedListOfRequirements )} )
#set ( $numberOfLines = ${numberOfRequirements} + 1 )
#set ( $listOfRootRequirementSets = $requirementDataProvider.getAllRootRequirementSets() )
## global line number variable
#set ( $line = 1 )
## Contains all requirement objects that shall be written to the excel sheet
#set ( $reqMap = {} )

##set ( $LHWurzelAnfSatz = ${requirementDataProvider.findRequirementSet($cfgMap.WurzelAnfSatz)} )
#set ( $LHWurzelAnfSatz = ${requirementDataProvider.findRequirementSet("Projekt")} )
#set ( $Zeilenzaehler = 0 )
#set ( $ColWidth = 0 )
#set ( $CurrentColWidth = 0 )
#set ( $SpaltenbreiteText = 200 )
#set ( $SpaltenbreiteUmsetzung = 120 )
#set ( $SpaltenbreiteBegruendung = 400 )

## Macro zum Berechnen der Spaltenbreite für die Spalte A
#macro(SpaltenbreiteErmitteln $AnfSatz)  ##startMacro
    #if( $AnfSatz.Name.startsWith("[") && $AnfSatz.Name.endsWith("]") )
        ## do nothing
    #elseif( $AnfSatz.getName().startsWith("--&gt;") )        
        #set( $AnfSatzNameLaenge = $AnfSatz.Name.length() )
        #set( $AnfSatzName = "" )
        #set( $AnfSatzName = $AnfSatz.Name.substring(6, $AnfSatzNameLaenge) )
        #set( $AnfSatz2 = "" )
        #set( $AnfSatz2 = ${requirementDataProvider.findRequirementSet($AnfSatzName)} )
        #if( $AnfSatz2 != "" )
            #SpaltenbreiteErmitteln( $AnfSatz2 )
        #end
    #else
        #foreach ( $Anf in $AnfSatz.getRequirements() )
            #set ( $id=$Anf.Id)
            #set ( $title=$Anf.Title)
            #set ( $CurrentColWidth=${id.length()} + ${title.length()})
            #if ( $CurrentColWidth > $ColWidth)
                #set ( $ColWidth = $CurrentColWidth)
            #end ##endif
        #end ##endforeach
        #foreach ( $subSet in ${AnfSatz.getRequirementSetChildren()} ) ##rekursiv alle Anforderungen der Subsets auslesen
            #SpaltenbreiteErmitteln ( $subSet )
        #end ##endforeach
    #end
#end ##endMacro
## Spaltenbreite berechnen
#if( $LHWurzelAnfSatz != "" )
    #SpaltenbreiteErmitteln( $LHWurzelAnfSatz )
#end
## Macro, welches die einzelnen Anforderungssätze und deren Anforderungen ausgibt
## verarbeitet jetz auch Platzhalter
#macro( writeAnfSatz $anfSatz, $level )
    #if( $anfSatz.Name.startsWith("[") && $anfSatz.Name.endsWith("]") )
        ## do nothing
    #elseif( $anfSatz.getName().startsWith("--&gt;") )    
        #set( $reqSetName = $anfSatz.getName() )
        #set( $requirementSet = "" )
        #set( $endIndex = $reqSetName.length() )
        #set( $requirementSetName = $reqSetName.substring(6, $endIndex ) )
        #set( $requirementSet = $requirementDataProvider.findRequirementSet($requirementSetName) )
        #if( $requirementSet != "" )
            #writeAnfSatz($requirementSet, $level )
        #else
            #set ( $AnfSatzStyle = "FehlerAnfSatz" )
            #set ( $Zeilenzaehler = $Zeilenzaehler + 1 )
            <Row>
                <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String">Fehler: Unter $anfSatz.Name keinen Anforderungssatz gefunden.</Data></Cell>
                <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String"></Data></Cell>
                <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String"></Data></Cell>
                <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String"></Data></Cell>
            </Row>
        #end
    #else
        #if( $level == 0 )
            #set ( $AnfSatzStyle = "WurzelAnfSatz")
            #set ( $Zeilenhoehe = "22" )
        #elseif( $level == 1 )
            #set ( $AnfSatzStyle = "HauptAnfSatz" )
            #set ( $Zeilenhoehe = "19" )
        #else
            #set ( $AnfSatzStyle = "UnterAnfSatz" )
            #set ( $Zeilenhoehe = "15.75" )
        #end
        #set ( $Zeilenzaehler = $Zeilenzaehler + 1 )
        <Row ss:AutoFitHeight="0" ss:Height="$Zeilenhoehe">
            <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String">${anfSatz.Name} </Data></Cell>
            <Cell ss:StyleID="${AnfSatzStyle}Beschreibung">
                <ss:Data ss:Type="String" xmlns="http://www.w3.org/TR/REC-html40"><Font>#foreach ( $text in ${anfSatz.Description})${text}#end</Font></ss:Data>
            </Cell>
            <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String"></Data></Cell>
            <Cell ss:StyleID="$AnfSatzStyle"><Data ss:Type="String"></Data></Cell>
        </Row>
        #foreach ( $Anf in $anfSatz.getRequirements() )
            #set( $Abnahmekriterium = [] )
            #set ($Objektkategorie=$Anf.getPropertyAsString("custom.Objektkategorie"))
            #if ($Objektkategorie.equals("Anforderung")) ##Anforderung ausgeben
                #set ( $Zeilenzaehler = $Zeilenzaehler + 1 ) ##für jede Anf Zeilenzähler + 1
                #if( $Anf.hasPropertyValue( "custom.Abnahmekriterium" ) ) )
                    #set( $Abnahmekriterium = $Anf.getPropertyAsStringArray( "custom.Abnahmekriterium" ) )
                #end
                <Row ss:AutoFitHeight="0" ss:Height="15.75">
                    <Cell ss:StyleID="Anforderung"><Data ss:Type="String">    $Anf.Id $Anf.Title </Data>
                    </Cell>
                    <Cell ss:StyleID="Anforderungtext">
                        <ss:Data ss:Type="String" xmlns="http://www.w3.org/TR/REC-html40"><Font>#foreach ( $text in ${Anf.Description})${text}#end</Font>#if( $arrayHelper.getArraySize( $Abnahmekriterium ) > 0 )<B><Font>&#10;&#10;Abnahmekriterium:&#10;</Font></B><Font>#foreach ( $Zeile in $Abnahmekriterium )${Zeile}#end</Font>#end</ss:Data>
                    </Cell>
                    <Cell ss:StyleID="Mitte_Mitte"><Data ss:Type="String"></Data></Cell>
                    <Cell ss:StyleID="Anforderungtext"><Data ss:Type="String"></Data></Cell>
                </Row>
            #else
                ## wenn keine Anforderung, dann nichts ausgeben
            #end
        #end ##endforeach $Anf
        #set($level = $level + 1)
        #foreach( $subAnfSatz in $anfSatz.getRequirementSetChildren() )
            #writeAnfSatz( $subAnfSatz, $level )
        #end
        #set($level = $level - 1)
    #end
#end

#macro( getRequirementObjectForCfgMapKey $key, $req)
    #foreach ( $requirement in $requirementDataProvider.getAllRequirements() )
        #if ( $key.equals($requirement.ID) )
         #set( $req = $requirement )
        #end
    #end
#end

#macro( writeTextFromCfgMap $cfgMapKey )
    #getRequirementObjectForCfgMapKey( $cfgMapKey, $requirement )
    #foreach($line in $requirement.getDescription())${line}#end
#end
    

#macro( writeRequirementRecord2 $requirementlist )
   #set ( $line = 1 ) 
   #foreach ( $req in $requirementlist )
       #set ( $line = $line + 1 ) 
 <Row ss:AutoFitHeight="1" ss:Height="15">
      <Cell ss:StyleID="s86"><Data ss:Type="Number">$line</Data></Cell>
      <Cell><Data ss:Type="String">$req.getParentRequirementSet().getName()</Data></Cell>
##      <Cell ss:StyleID="s86"><Data ss:Type="String"></Data></Cell>
      <Cell><Data ss:Type="String">$req.ID</Data></Cell>
##      <Cell><Data ss:Type="String"></Data></Cell>
      <Cell><Data ss:Type="String">$req.getPropertyAsString("custom.Objektkategorie")</Data></Cell>
##      <Cell><Data ss:Type="String"></Data></Cell>
      <Cell><Data ss:Type="String">$req.Name</Data></Cell>
##      <Cell><Data ss:Type="String"></Data></Cell>
      <Cell><ss:Data ss:Type="String" xmlns="http://www.w3.org/TR/REC-html40"><Font>#foreach ( $text in ${req.Description})${text}#end</Font></ss:Data></Cell>
##          <ss:Data ss:Type="String" xmlns="http://www.w3.org/TR/REC-html40"><Font>#foreach ( $text in ${anfSatz.Description})${text}#end</Font></ss:Data>
##      <Cell><Data ss:Type="String"></Data></Cell>
    </Row>
    #end
#end ## macro writeRequirementRecord ( $requirementlist )
    
    
#macro( traverse1 $requirementSet $pathName )
    #if( $requirementSet.hasRequirementChildren() )
        #foreach( $requirement in $requirementSet.getRequirementChildren() )
            #writeRequirementRecord( $requirement "$pathName/$requirementSet.Name" ) 
        #end
    #end
    #if( $requirementSet.hasRequirementSetChildren() )
        #foreach( $subSet in $requirementSet.getRequirementSetChildren() )
            #traverse1( $subSet "$pathName/$requirementSet.Name" )
        #end
    #end
#end ## macro traverse1


#macro( writeRequirementRecord $req $pathNameOfRequirement )
    #set ( $line = $line + 1 )
    #set ( $_dummy = $reqMap.put( $req.ID, [$line, $pathNameOfRequirement] ) )
<Row ss:AutoFitHeight="1" ss:Height="15">
<Cell ss:StyleID="s86"><Data ss:Type="Number">$line</Data></Cell>
<Cell><Data ss:Type="String">$pathNameOfRequirement</Data></Cell>
<Cell><Data ss:Type="String">$req.ID</Data></Cell>
<Cell><Data ss:Type="String">$req.getPropertyAsString("custom.Objektkategorie")</Data></Cell>
<Cell><Data ss:Type="String">$req.Name</Data></Cell>
<Cell><ss:Data ss:Type="String" xmlns="http://www.w3.org/TR/REC-html40"><Font>#foreach ( $text in ${req.Description})${text}#end</Font></ss:Data></Cell>
</Row>
#end ## macro writeRequirementRecord ( $requirement $pathNameOfRequirement )
    
    

#macro( traverse2 $requirementSet $pathName )
    #if( $requirementSet.hasRequirementChildren() )
        #foreach( $requirement in $requirementSet.getRequirementChildren() )
            #writeDependencyRecord( $requirement ) 
        #end
    #end
    #if( $requirementSet.hasRequirementSetChildren() )
        #foreach( $subSet in $requirementSet.getRequirementSetChildren() )
            #traverse2( $subSet "$pathName/$requirementSet.Name" )
        #end
    #end
#end ## macro traverse2

#macro( writeDependencyRecord $srcRequirement )
    #set( $listOfDestinationRequirements = $srcRequirement.getReferredRequirements() )
    #foreach ( $destinationRequirement in $listOfDestinationRequirements )
        #set ( $line = $line + 1 )
       <Row>
        <Cell><Data ss:Type="String">$reqMap.get($srcRequirement.ID).get(1)</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell ss:StyleID="s80" ss:HRef="#'Requirements'!C$reqMap.get($srcRequirement.ID).get(0)"><Data ss:Type="String">$srcRequirement.ID</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">$srcRequirement.getPropertyAsString("custom.Objektkategorie")</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">$srcRequirement.Name</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">&#45;-&gt;</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">$reqMap.get($destinationRequirement.ID).get(1)</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell ss:StyleID="s80" ss:HRef="#'Requirements'!C$reqMap.get($destinationRequirement.ID).get(0)"><Data ss:Type="String">$destinationRequirement.ID</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">$destinationRequirement.getPropertyAsString("custom.Objektkategorie")</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
        <Cell><Data ss:Type="String">$destinationRequirement.Name</Data><NamedCell ss:Name="_FilterDatabase"/></Cell>
       </Row>
    #end
#end


##...das eigentliche XML-Dokument
#macro( main )
<?xml version="1.0"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <Author>Karsten Wolfert</Author>
  <LastAuthor>Karsten Wolfert</LastAuthor>
  <Created>2012-08-28T10:03:55Z</Created>
  <LastSaved>2012-08-28T13:21:07Z</LastSaved>
  <Version>12.00</Version>
 </DocumentProperties>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>12585</WindowHeight>
  <WindowWidth>28515</WindowWidth>
  <WindowTopX>120</WindowTopX>
  <WindowTopY>90</WindowTopY>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>
 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="11" ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s79" ss:Name="Hyperlink">
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="11" ss:Color="#0000FF"
    ss:Underline="Single"/>
  </Style>
  <Style ss:ID="s16">
   <NumberFormat ss:Format="@"/>
  </Style>
  <Style ss:ID="s21">
   <Alignment ss:Horizontal="Left" ss:Vertical="Top"/>
  </Style>
  <Style ss:ID="s80" ss:Parent="s79">
   <Alignment ss:Vertical="Bottom"/>
   <Protection/>
  </Style>
  <Style ss:ID="s86">
   <Alignment ss:Horizontal="Left" ss:Vertical="Top"/>
   <NumberFormat ss:Format="@"/>
  </Style>
  <Style ss:ID="s87">
   <Alignment ss:Horizontal="Left" ss:Vertical="Top" ss:WrapText="1"/>
  </Style>
 </Styles>
 <Worksheet ss:Name="Requirements">
    ##Tabelle
  <Table  ss:ExpandedColumnCount="6" x:FullColumns="1" x:FullRows="1" ss:StyleID="s21" ss:DefaultColumnWidth="60" ss:DefaultRowHeight="15">
   <Column ss:StyleID="s21" ss:Width="24"/>
   <Column ss:StyleID="s21" ss:Width="87.75"/>
   <Column ss:StyleID="s21" ss:Width="121.5"/>
   <Column ss:StyleID="s21" ss:Width="133.5"/>
   <Column ss:StyleID="s87" ss:Width="135"/>
   <Column ss:StyleID="s87" ss:AutoFitWidth="0" ss:Width="673.5"/>
    <Row>
        <Cell ss:StyleID="s86"><Data ss:Type="String">LINE</Data></Cell>
        <Cell><Data ss:Type="String">SOURCE_REQ_SET</Data></Cell>
        <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_ID</Data></Cell>
        <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_TYPE</Data></Cell>
        <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_TITLE</Data></Cell>
        <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_TEXT</Data></Cell>
    </Row>
   <!-- traverse1() and writeRequirementRecord() -->
    #foreach( $reqSet in $listOfRootRequirementSets )
        #traverse1( $reqSet, "")
    #end
    </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.78740157499999996" x:Left="0.7" x:Right="0.7"
     x:Top="0.78740157499999996"/>
   </PageSetup>
   <Selected/>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>7</ActiveRow>
     <ActiveCol>1</ActiveCol>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name="Dependencies">
  <Names>
   <NamedRange ss:Name="_FilterDatabase" ss:RefersTo="='Dependencies'!R1C1:R15C9"
    ss:Hidden="1"/>
  </Names>
  <Table x:FullRows="1" ss:DefaultColumnWidth="60" ss:DefaultRowHeight="15">
   <Column ss:StyleID="s16" ss:Width="93.75"/>
   <Column ss:Width="121.5"/>
   <Column ss:Width="172.5"/>
   <Column ss:Width="135"/>
   <Column ss:Width="20.25"/>
   <Column ss:StyleID="s16" ss:Width="114.75"/>
   <Column ss:Width="132.75"/>
   <Column ss:Width="162"/>
   <Column ss:Width="159"/>
   <Row>
    <Cell><Data ss:Type="String">SOURCE_REQ_SET</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_ID</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">DESTINATION_REQ_OBJECT_TYPE</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">SOURCE_REQ_OBJECT_TITLE</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String"> &#45;-&gt;</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">DESTINATION_REQ_SET</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">DESTINATION_REQ_OBJECT_ID</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">DESTINATION_REQ_OBJECT_TYPE</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
    <Cell><Data ss:Type="String">DESTINATION_REQ_OBJECT_TITLE</Data><NamedCell
      ss:Name="_FilterDatabase"/></Cell>
   </Row>
   <!-- traverse2() and writeDependencyRecord() -->
    #foreach( $reqSet in $listOfRootRequirementSets )
        #traverse2( $reqSet, "")
    #end
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.78740157499999996" x:Left="0.7" x:Right="0.7"
     x:Top="0.78740157499999996"/>
   </PageSetup>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>14</ActiveRow>
     <RangeSelection>R15C1:R15C2</RangeSelection>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
  <AutoFilter x:Range="R1C1:R15C9"
   xmlns="urn:schemas-microsoft-com:office:excel">
  </AutoFilter>
 </Worksheet>
</Workbook>
#end ## end macro main()

#main()
